name: Test Ubuntu Release Download

on:
  push:
    branches: [ master cok-834 ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-16.04, macos-latest ]
    # There is no hosted environment for Unbuntu 14.04 or for debian

    steps:
    - name: OS
      run: echo ${{ matrix.os }}
    - name: Download Ubuntu 16.04 releases
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-latest'
      run: |
        wget -q https://github.com/dafny-lang/dafny/releases/download/v3.0.0-pre-release-1/dafny-3.0.0-pre-1-x64-ubuntu-16.04.zip
        wget -q https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-ubuntu-16.04.zip
        echo Fetched Ubuntu 16.04 dafny, z3
    - name: Download Ubuntu 14.04 releases
      if: matrix.os == 'ubuntu-14.04'
      run: |
        wget -q https://github.com/dafny-lang/dafny/releases/download/v3.0.0-pre-release-1/dafny-3.0.0-pre-1-x64-ubuntu-14.04.zip
        wget -q https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-ubuntu-14.04.zip
        echo Fetched Ubuntu 14.04 dafny, z3
    - name: Download Mac releases
      if: startsWith(matrix.os, 'macos')
      run: |
        wget -q https://github.com/dafny-lang/dafny/releases/download/v3.0.0-pre-release-1/dafny-3.0.0-pre-1-x64-osx-10.14.1.zip
        wget -q https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-osx-10.14.1.zip
        echo Fetched MacOS 10.14 dafny, z3
    - name: Unpack Dafny
      run: |
        unzip dafny*.zip && rm dafny*.zip
        ls -laR .
        chmod +x dafny/Dafny.exe
    - name: Unpack Z3
      run: |
        unzip z3*.zip && rm z3*.zip
        cp -r z3-* z3
    ## Create a simple smoke test program
    - name: Make test program
      run: |
        echo "method Main() { assert true; print 42, '\n'; }" > a.dfy
        echo "method m() { assert false; }" > b.dfy
        echo "42" > expect.txt
    ## Check that dafny and z3 run and that a simple program verifies or fails
    - name: Versions
      run: |
        ./z3/bin/z3 -version
        dafny/dafny  -version
    - name: Check
      run: dafny/dafny /compile:0 a.dfy
    - name: Check
      run: dafny/dafny /compile:0 a.dfy /z3exe:z3/bin/z3
    - name: Check bad
      run: dafny/dafny /compile:0 b.dfy || echo EXPECTED FAILURE
    - name: Check bad
      run: dafny/dafny /compile:0 b.dfy /z3exe:z3/bin/z3 || echo EXPECTED FAILURE
    ## Check that a simple program compiles and runs on each supported platform
    - name: Check C# compile
      run: |
        dafny/dafny /compileVerbose:0 /compile:3 /compileTarget:cs /spillTargetCode:3 a.dfy
        ls -R dafny
    - name: Check Go compile
      run: |
        dafny/dafny /compile:3 /spillTargetCode:3 /compileTarget:go a.dfy
        go run a.go dafny/Binaries/DafnyRuntime.go
    - name: Check Javascript compile
      run: |
        npm install bignumber.js
        dafny/dafny /compile:3 i/spillTargetCode:3 /compileTarget:js a.dfy
        node.js a.js dafny/Binaries/DafnyRuntime.js | diff - expect.txt
    - name: Check Java compile
      run: |
        ls -la dafny
        echo SKIPPING dafny/Dafny.exe /compile:3 /compileTarget:java a.dfy 

