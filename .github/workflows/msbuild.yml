name: Build and Test

on:
  push:
    branches: [ master cok-834 ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        ## Macos jobs tend to stall
        ##os: [ubuntu-latest, windows-latest, ubuntu-16.04]
        os: [ubuntu-latest, macos-latest, windows-latest, ubuntu-16.04]
        ## Size of the following array must match --num-shards in lit command
        ##shard: [1, 2, 3, 4, 5]
        shard: [1, 2, 3]
      fail-fast: false
    steps:
    - name: Manually sync certs
      if: runner.os == 'Linux'
      run: cert-sync /etc/ssl/certs/ca-certificates.crt
    - uses: actions/setup-python@v1
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1.6.0
      with:
        dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
    - name: C++ for ubuntu 16.04
      if: matrix.os == 'ubuntu-16.04'
      run: |
        sudo apt-get install -y build-essential
    - name: Checkout Dafny
      uses: actions/checkout@v2
      with:
        submodules: recursive
        path: dafny
    - name: Get Z3 - windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Invoke-WebRequest -Outfile z3X.zip -Uri https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-win.zip
    - name: Get Z3 - mac
      if: matrix.os == 'macos-latest'
      run: |
        wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-osx-10.14.1.zip
    - name: Get Z3a - ubuntu
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-16.04'
      run: |
        wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-ubuntu-16.04.zip
    - name: Install Z3
      run: |
        unzip z3*.zip && rm *.zip
        cp -r z3* dafny/Binaries/z3
    - name: Build Dafny
      run: dotnet build dafny/Source/Dafny.sln
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build and Copy DafnyRuntime.jar with Gradle
      run: dafny/Source/DafnyRuntime/DafnyRuntimeJava/gradlew -p dafny/Source/DafnyRuntime/DafnyRuntimeJava copyJarToBinaries
    - name: Upgrade outdated pip
      run: python -m pip install --upgrade pip
    - name: Install lit
      run: pip install lit OutputCheck pyyaml
    - uses: actions/setup-node@v1
    - run: npm install bignumber.js
    - name: Run lit tests
      run: lit --time-tests -v --num-shards=3 --run-shard=${{ matrix.shard }} dafny/Test
