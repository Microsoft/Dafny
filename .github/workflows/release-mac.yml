name: Test Mac Release Download

on:
  push:
    branches: [ master cok-834 ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: macos-latest

    steps:
    - name: Install mono
      run: brew install mono || echo OK
    - name: Download Mac release
      run: |
        echo ${{ matrix.os }}
        wget -q https://github.com/dafny-lang/dafny/releases/download/v3.0.0-pre-release-1/dafny-3.0.0-pre-1-x64-osx-10.14.1.zip
        unzip dafny*.zip && rm dafny*.zip
        ls -la dafny/Dafny.exe
        chmod +x dafny/Dafny.exe
    - name: Get Z3
      run: |
        wget -q https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-osx-10.14.1.zip
        unzip z3*.zip && rm z3*.zip
        cp -r z3-* z3
        ls -laR z3/bin/z3
        file z3/bin/z3
    - name: Make test program
      run: |
        echo "method Main() { assert true; print 42, '\n'; }" > a.dfy
        echo "method m() { assert false; }" > b.dfy
        echo "42" > expect.txt
    - name: Versions
      run: |
        ./z3/bin/z3 -version
        dafny/dafny -version || echo OK
        (dafny/dafny -help | head -2) || echo OK
    - name: Check
      run: dafny/dafny /compile:0 a.dfy
    - name: Check bad
      run: dafny/dafny /compile:0 b.dfy || echo EXPECTED FAILURE
    - name: Check
      run: dafny/dafny /compile:0 a.dfy /z3exe:z3/bin/z3
    - name: Check bad
      run: dafny/dafny /compile:0 b.dfy /z3exe:z3/bin/z3 || echo EXPECTED FAILURE
    - name: Check C# compile
      run: |
        dafny/dafny /compileVerbose:0 /compile:3 /compileTarget:cs /spillTargetCode:3 a.dfy
        ls dafny/Binaries || echo FAILED
        ls dafny || echo FAILED
    - name: Check Go compile
      run: |
        dafny/dafny /compile:3 /spillTargetCode:3 /compileTarget:go a.dfy 
    - name: Check Javascript compile
      run: |
        dafny/dafny /compile:3 i/spillTargetCode:3 /compileTarget:js a.dfy 
    - name: Check Java compile
      run: echo SKIPPING dafny/dafny /compile:3 /compileTarget:java a.dfy 
