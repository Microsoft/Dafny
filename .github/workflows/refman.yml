name: Build DafnyRef.pdf

on:
  push:
    branches: [ master cok-834 ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-16.04, macos-latest ]


    steps:
    - name: OS
      run: echo ${{ runner.os }} ${{ matrix.os }}
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1
    - name: Manually sync certs
      run: echo SKIPPING cert-sync /etc/ssl/certs/ca-certificates.crt
    - name: Add msbuild to PATH
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.0.0
    - name: Install brew
      run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    - name: Install mono
      run: brew install mono || echo OK
    - name: Checkout Boogie
      uses: actions/checkout@v2
      with:
        repository: boogie-org/boogie
        ref: v2.4.21
        path: boogie
    - name: Nuget Restore Boogie
      run: nuget restore boogie/Source/Boogie.sln
    - name: Build Boogie
      run: msbuild boogie/Source/Boogie.sln
    - name: Checkout Dafny
      uses: actions/checkout@v2
      with:
        path: dafny
    - name: Get Z3 - MacOS
      if: runner.os == 'MacOS'
      run: wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-osx-10.14.1.zip
    - name: Get Z3 - Linux
      if: runner.os == 'Linux'
      run: wget -q https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-ubuntu-16.04.zip
    - name: Unpack Z3
      run: |
        unzip z3*.zip && rm z3*.zip
        cp -r z3* dafny/Binaries/z3
    - name: Nuget Restore Dafny
      run: nuget restore dafny/Source/Dafny.sln
    - name: Build Dafny Parser
      run: make -C dafny/Source/Dafny -f Makefile.Linux
    - name: Build Dafny
      run: msbuild dafny/Source/Dafny.sln
    - name: Versions
      run: |
        ls -Ra dafny/Binaries
        file dafny/Binaries/dafny
        dafny/Binaries/dafny -version
        dafny/Binaries/z3/bin/z3 -version
    - name: Install pandoc - Linux
      if: runner.os == 'Linux'
      run: sudo apt-get install texlive pandoc pandoc-citeproc
    - name: Install pandoc - MacOS
      if: runner.os == 'MacOS'
      run: |
        brew install pandoc pandoc-citeproc
        brew cask install texlive
        eval "$(/usr/libexec/path_helper)"
        tlmgr install framed
    - name: Install syntax highlighting
      run: sudo gem install rouge
    - name: Check install
      run: |
        which latex || echo NOT FOUND latex
        which xelatex || echo NOT FOUND xelatex
        find /usr/local/texlive -name xelatex
        ls /usr/local/texlive/2020/bin/x86_64-darwin/xelatex || echo NOT FOUND
    - name: Build DafnyRef.pdf
      run: make -C dafny/docs/DafnyReferenceManual 
    - name: Check
      run: ls -la dafny/docs/DafnyReferenceManual/DafnyRef.pdf
