TraitResolution.dfy(65,22): Error: the type of in-parameter 'x' is different from the type of the corresponding in-parameter in trait method ('int' instead of '(Y, B)')
TraitResolution.dfy(89,11): Error: new can be applied only to class types (got A?)
TraitResolution.dfy(90,11): Error: new can be applied only to class types (got ASynonym)
TraitResolution.dfy(93,11): Error: new can be applied only to class types (got B?)
TraitResolution.dfy(93,11): Error: when allocating an object of type 'B', one of its constructor methods must be called
TraitResolution.dfy(96,11): Error: new can be applied only to class types (got C?<A>)
TraitResolution.dfy(98,11): Error: new can be applied only to class types (got C?<A?>)
TraitResolution.dfy(101,11): Error: new can be applied only to class types (got D?<A>)
TraitResolution.dfy(101,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution.dfy(103,11): Error: new can be applied only to class types (got D?<A?>)
TraitResolution.dfy(103,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution.dfy(105,11): Error: new can be applied only to class types (got D<A>)
TraitResolution.dfy(105,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution.dfy(107,11): Error: new can be applied only to class types (got D<A?>)
TraitResolution.dfy(107,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution.dfy(108,11): Error: new can be applied only to class types (got DSynonym<A?>)
TraitResolution.dfy(108,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution.dfy(109,11): Error: new can be applied only to class types (got DSynonym<A?>)
TraitResolution.dfy(109,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution.dfy(112,11): Error: new can be applied only to class types (got object?)
TraitResolution.dfy(113,11): Error: new can be applied only to class types (got ObjectSynonym)
TraitResolution.dfy(114,11): Error: new can be applied only to class types (got ObjectWithConstraint)
TraitResolution.dfy(117,13): Error: new can be applied only to class types (got array?<int>)
TraitResolution.dfy(119,11): Error: new can be applied only to class types (got int)
TraitResolution.dfy(121,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution.dfy(122,11): Error: new can be applied only to class types (got Tr?<int>)
TraitResolution.dfy(123,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution.dfy(124,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution.dfy(136,8): Error: class 'P' inherits a member named 'data' from both traits 'A' and 'B'
TraitResolution.dfy(139,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<Even> and C<int>
TraitResolution.dfy(140,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<int> and C<real>
TraitResolution.dfy(140,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<int> and C<Even>
TraitResolution.dfy(150,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<(real, int)> (via X6, X4, X3) and C<seq<bool>> (via X7, X2)
TraitResolution.dfy(151,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<seq<bool>> (via X7, X2) and C<(real, int)> (via X6, X4, X3)
TraitResolution.dfy(168,8): Error: class 'P' inherits a member named 'data' from both traits 'B' and 'A'
TraitResolution.dfy(169,8): Error: class 'Q' inherits a member named 'data' from both traits 'C' and 'A'
TraitResolution.dfy(170,8): Error: class 'R' inherits a member named 'data' from both traits 'D' and 'A'
TraitResolution.dfy(175,17): Error: static non-ghost const field 'Cnst' of type 'object' (which does not have a default compiled value) must give a defining value
TraitResolution.dfy(236,8): Error: field 'civ' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(237,14): Error: field 'giv' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(238,10): Error: field 'cic' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(239,16): Error: field 'gic' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(240,17): Error: static const field 'csc' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(241,23): Error: static const field 'gsc' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(247,20): Error: member 'cif2' in class 'Cl' overrides fully defined function inherited from trait 'Tr'
TraitResolution.dfy(248,13): Error: member 'gif2' in class 'Cl' overrides fully defined function inherited from trait 'Tr'
TraitResolution.dfy(249,20): Error: member 'cif3' in class 'Cl' overrides fully defined function inherited from trait 'Tr'
TraitResolution.dfy(250,13): Error: member 'gif3' in class 'Cl' overrides fully defined function inherited from trait 'Tr'
TraitResolution.dfy(252,27): Error: static function 'csf0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(253,20): Error: static function 'gsf0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(254,27): Error: static function 'csf1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(255,20): Error: static function 'gsf1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(256,27): Error: static function 'csf2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(257,20): Error: static function 'gsf2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(258,27): Error: static function 'csf3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(259,20): Error: static function 'gsf3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(265,11): Error: member 'cim2' in class 'Cl' overrides fully defined method inherited from trait 'Tr'
TraitResolution.dfy(266,17): Error: member 'gim2' in class 'Cl' overrides fully defined method inherited from trait 'Tr'
TraitResolution.dfy(267,11): Error: member 'cim3' in class 'Cl' overrides fully defined method inherited from trait 'Tr'
TraitResolution.dfy(268,17): Error: member 'gim3' in class 'Cl' overrides fully defined method inherited from trait 'Tr'
TraitResolution.dfy(270,18): Error: static method 'csm0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(271,24): Error: static method 'gsm0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(272,18): Error: static method 'csm1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(273,24): Error: static method 'gsm1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(274,18): Error: static method 'csm2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(275,24): Error: static method 'gsm2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(276,18): Error: static method 'csm3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(277,24): Error: static method 'gsm3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution.dfy(299,13): Error: overridden function 'F' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution.dfy(300,20): Error: overridden function 'G' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution.dfy(303,17): Error: overridden method 'M' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution.dfy(304,11): Error: overridden method 'N' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution.dfy(320,10): Error: method 'N' in 'AAA' can only be overridden by a method (got lemma)
TraitResolution.dfy(321,17): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got method)
TraitResolution.dfy(336,19): Error: method 'N' in 'AAA' can only be overridden by a method (got twostate lemma)
TraitResolution.dfy(337,19): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got twostate lemma)
TraitResolution.dfy(338,10): Error: twostate lemma 'K' in 'AAA' can only be overridden by a twostate lemma (got lemma)
TraitResolution.dfy(356,16): Error: inductive predicate 'P' in 'AAA' can only be overridden by a inductive predicate (got copredicate)
TraitResolution.dfy(357,24): Error: copredicate 'Q' in 'AAA' can only be overridden by a copredicate (got inductive predicate)
TraitResolution.dfy(358,12): Error: inductive lemma 'R' in 'AAA' can only be overridden by a inductive lemma (got colemma)
TraitResolution.dfy(359,20): Error: colemma 'S' in 'AAA' can only be overridden by a colemma (got inductive lemma)
TraitResolution.dfy(369,20): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got inductive lemma)
TraitResolution.dfy(372,14): Error: inductive predicate 'P' in 'AAA' can only be overridden by a inductive predicate (got predicate)
TraitResolution.dfy(373,14): Error: copredicate 'Q' in 'AAA' can only be overridden by a copredicate (got predicate)
TraitResolution.dfy(374,10): Error: inductive lemma 'R' in 'AAA' can only be overridden by a inductive lemma (got lemma)
TraitResolution.dfy(375,10): Error: colemma 'S' in 'AAA' can only be overridden by a colemma (got lemma)
TraitResolution.dfy(408,24): Error: the type of special parameter '_k' of inductive predicate 'Q' (ORDINAL) must be the same as in the overridden inductive predicate (nat)
TraitResolution.dfy(412,20): Error: the type of special parameter '_k' of inductive lemma 'L' (ORDINAL) must be the same as in the overridden inductive lemma (nat)
TraitResolution.dfy(416,24): Error: the type of special parameter '_k' of inductive predicate 'P' (nat) must be the same as in the overridden inductive predicate (ORDINAL)
TraitResolution.dfy(418,24): Error: the type of special parameter '_k' of inductive predicate 'R' (nat) must be the same as in the overridden inductive predicate (ORDINAL)
TraitResolution.dfy(420,20): Error: the type of special parameter '_k' of inductive lemma 'K' (nat) must be the same as in the overridden inductive lemma (ORDINAL)
TraitResolution.dfy(422,20): Error: the type of special parameter '_k' of inductive lemma 'M' (nat) must be the same as in the overridden inductive lemma (ORDINAL)
TraitResolution.dfy(426,24): Error: the type of special parameter '_k' of inductive predicate 'Q' (ORDINAL) must be the same as in the overridden inductive predicate (nat)
TraitResolution.dfy(430,20): Error: the type of special parameter '_k' of inductive lemma 'L' (ORDINAL) must be the same as in the overridden inductive lemma (nat)
94 resolution/type errors detected in TraitResolution.dfy
